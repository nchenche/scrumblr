version: '3.8'
services:
  redis:
    image: redis:alpine
    container_name: "redis-dock"
    user: "redis"
    ports:
      - "6379:6379"    
    networks:
      - app-network
  node:
    build: 
      context: .
      dockerfile: Dockerfile
    user: "node"
    ports:
      - "1000:1000"
    networks:
      - app-network
    environment:
      NODE_ENV: ${NODE_ENV:-development} # Default to development if NODE_ENV is not set
    command: >
      sh -c '
      if [ "$$NODE_ENV" = "production" ]; then
        npm run start;
      else
        npm run dev;
      fi
      '
    healthcheck:
      test: ["CMD-SHELL", "cat package.json | grep bcrypt && ls node_modules | grep bcrypt"]
      interval: 30s
      timeout: 10s
      retries: 3
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node
    networks:
      - app-network
  api:
    build:
      context: ./dicebear
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network    
networks:
  app-network:
    driver: bridge
